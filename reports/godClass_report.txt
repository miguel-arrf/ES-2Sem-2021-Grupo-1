RuleEditor.RuleFileManager	[RuleEditor.RuleFileManager::guiToJSONObject(java.util.ArrayList<RuleEditor.CustomNode>, java.lang.String, boolean):org.json.simple.JSONObject, RuleEditor.RuleFileManager::customNodeToJSON(RuleEditor.CustomNode, java.util.List<RuleEditor.CustomNode>):org.json.simple.JSONObject, RuleEditor.RuleFileManager::getChild(RuleEditor.CustomNode, java.util.List<RuleEditor.CustomNode>):java.util.ArrayList<RuleEditor.CustomNode>, RuleEditor.RuleFileManager::jsonObjectToCodeSmell(org.json.simple.JSONObject, RuleEditor.DraggingObject, java.lang.String, boolean):CodeSmellDetection.CodeSmell, RuleEditor.RuleFileManager::jsonToGUI(org.json.simple.JSONObject, RuleEditor.DraggingObject):RuleEditor.CustomNode, RuleEditor.RuleFileManager::addChildrenToObject(T, org.json.simple.JSONObject, RuleEditor.DraggingObject, java.util.function.BiFunction<T,RuleEditor.CustomNode,T>, java.util.function.BiFunction<T,RuleEditor.CustomNode,T>):void, RuleEditor.RuleFileManager::jsonObjectToCustomNode(org.json.simple.JSONObject, RuleEditor.DraggingObject):RuleEditor.CustomNode, RuleEditor.RuleFileManager::getRuleOperator(java.lang.String):CodeSmellDetection.RuleOperator]
RuleEditor.RuleFileManager	[RuleEditor.RuleFileManager::jsonObjectToCodeSmell(org.json.simple.JSONObject, RuleEditor.DraggingObject, java.lang.String, boolean):CodeSmellDetection.CodeSmell, RuleEditor.RuleFileManager::jsonToGUI(org.json.simple.JSONObject, RuleEditor.DraggingObject):RuleEditor.CustomNode, RuleEditor.RuleFileManager::addChildrenToObject(T, org.json.simple.JSONObject, RuleEditor.DraggingObject, java.util.function.BiFunction<T,RuleEditor.CustomNode,T>, java.util.function.BiFunction<T,RuleEditor.CustomNode,T>):void, RuleEditor.RuleFileManager::jsonObjectToCustomNode(org.json.simple.JSONObject, RuleEditor.DraggingObject):RuleEditor.CustomNode, RuleEditor.RuleFileManager::getRuleOperator(java.lang.String):CodeSmellDetection.RuleOperator]
RuleEditor.RuleFileManager	[RuleEditor.RuleFileManager::java.io.File file, RuleEditor.RuleFileManager::loadJSONRuleFile():java.util.ArrayList<org.json.simple.JSONObject>, RuleEditor.RuleFileManager::saveFile(java.lang.String):void, RuleEditor.RuleFileManager::saveJSONListToFile(javafx.collections.ObservableList<org.json.simple.JSONObject>):void]
RuleEditor.RuleFileManager	[RuleEditor.RuleFileManager::guiToJSONObject(java.util.ArrayList<RuleEditor.CustomNode>, java.lang.String, boolean):org.json.simple.JSONObject, RuleEditor.RuleFileManager::customNodeToJSON(RuleEditor.CustomNode, java.util.List<RuleEditor.CustomNode>):org.json.simple.JSONObject, RuleEditor.RuleFileManager::getChild(RuleEditor.CustomNode, java.util.List<RuleEditor.CustomNode>):java.util.ArrayList<RuleEditor.CustomNode>]
RuleEditor.RuleFileManager	[RuleEditor.RuleFileManager::jsonObjectToCodeSmell(org.json.simple.JSONObject, RuleEditor.DraggingObject, java.lang.String, boolean):CodeSmellDetection.CodeSmell, RuleEditor.RuleFileManager::jsonToGUI(org.json.simple.JSONObject, RuleEditor.DraggingObject):RuleEditor.CustomNode, RuleEditor.RuleFileManager::addChildrenToObject(T, org.json.simple.JSONObject, RuleEditor.DraggingObject, java.util.function.BiFunction<T,RuleEditor.CustomNode,T>, java.util.function.BiFunction<T,RuleEditor.CustomNode,T>):void]
SmellDetectionQualityEvaluation.ConfusionMatrix	[SmellDetectionQualityEvaluation.ConfusionMatrix::int truePositives, SmellDetectionQualityEvaluation.ConfusionMatrix::incrementTruePositives():void, SmellDetectionQualityEvaluation.ConfusionMatrix::int falsePositives, SmellDetectionQualityEvaluation.ConfusionMatrix::incrementFalsePositives():void, SmellDetectionQualityEvaluation.ConfusionMatrix::int trueNegatives, SmellDetectionQualityEvaluation.ConfusionMatrix::incrementTrueNegatives():void]
SmellDetectionQualityEvaluation.ConfusionMatrix	[SmellDetectionQualityEvaluation.ConfusionMatrix::int truePositives, SmellDetectionQualityEvaluation.ConfusionMatrix::incrementTruePositives():void, SmellDetectionQualityEvaluation.ConfusionMatrix::int falsePositives, SmellDetectionQualityEvaluation.ConfusionMatrix::incrementFalsePositives():void]
g1.ISCTE.MyTree	[g1.ISCTE.MyTree::getFolderImage():javafx.scene.image.ImageView, g1.ISCTE.MyTree::percolateFolder(javafx.scene.layout.VBox, java.io.File):void, g1.ISCTE.MyTree::setImageViewStyle(javafx.scene.image.ImageView):void]
RuleEditor.ConditionBlock	[RuleEditor.ConditionBlock::javafx.scene.control.Label ruleLabel, RuleEditor.ConditionBlock::getRule():java.lang.String, RuleEditor.ConditionBlock::javafx.scene.control.Label valueLabel, RuleEditor.ConditionBlock::getValue():java.lang.String]
RuleEditor.LogicBlock	[RuleEditor.LogicBlock::RuleEditor.DraggingObject whatIsBeingDragged, RuleEditor.LogicBlock::setDrag(javafx.scene.layout.VBox):void, RuleEditor.LogicBlock::addCustomNodeOnDrag(javafx.scene.layout.VBox, RuleEditor.CustomNode):void]
MetricExtraction.Method	[MetricExtraction.Method::java.lang.String method, MetricExtraction.Method::calculateCyclo_Method():int, MetricExtraction.Method::calculateLoc_Method():int]
MetricExtraction.MetricExtractor	[MetricExtraction.MetricExtractor::java.util.concurrent.ExecutorService threadPool, MetricExtraction.MetricExtractor::executeExtraction():void, MetricExtraction.MetricExtractor::java.util.ArrayList<MetricExtraction.ClassMetrics> metrics, MetricExtraction.MetricExtractor::java.util.ArrayList<java.io.File> source_code, MetricExtraction.MetricExtractor::getFilesFromProjectDirectory(java.io.File):void]
MetricExtraction.MetricExtractor	[MetricExtraction.MetricExtractor::java.lang.String exported_file_name, MetricExtraction.MetricExtractor::java.lang.String destination_directory, MetricExtraction.MetricExtractor::getFinalPath():java.lang.String, MetricExtraction.MetricExtractor::exportResultsToFile():void]
RuleEditor.RuleEditor	[RuleEditor.RuleEditor::java.util.ArrayList<RuleEditor.CustomNode> rectanglesTypes, RuleEditor.RuleEditor::addDefaultBlocks():void, RuleEditor.RuleEditor::RuleEditor.DraggingObject inDragObject]
RuleEditor.RuleEditor	[RuleEditor.RuleEditor::boolean isNewRule, RuleEditor.RuleEditor::getSaveButton(javafx.stage.Stage):javafx.scene.control.Button, RuleEditor.RuleEditor::getOptionsVBox(javafx.stage.Stage):javafx.scene.layout.VBox, RuleEditor.RuleEditor::rightVBox(javafx.stage.Stage):javafx.scene.layout.VBox]
RuleEditor.RulesManager	[RuleEditor.RulesManager::java.util.HashMap<java.lang.String,java.util.ArrayList<java.lang.String>> results, RuleEditor.RulesManager::MetricExtraction.MetricExtractor metricExtractor, RuleEditor.RulesManager::createCodeSmells():java.util.ArrayList<CodeSmellDetection.CodeSmell>]
g1.ISCTE.NewGUI	[g1.ISCTE.NewGUI::java.util.ArrayList<javafx.scene.control.Label> metricBoxes, g1.ISCTE.NewGUI::loadMethod(java.util.ArrayList<java.util.ArrayList<java.lang.String>>, java.lang.String[]):void, g1.ISCTE.NewGUI::getSquareInfoBox(java.lang.String):javafx.scene.layout.VBox, g1.ISCTE.NewGUI::getStyledLabel():javafx.scene.control.Label]
SmellDetectionQualityEvaluation.QualityEvaluator	[SmellDetectionQualityEvaluation.QualityEvaluator::java.io.File projectFile, SmellDetectionQualityEvaluation.QualityEvaluator::initializeData():java.util.HashMap<java.lang.String,java.util.ArrayList<java.lang.String>>, SmellDetectionQualityEvaluation.QualityEvaluator::run():void, SmellDetectionQualityEvaluation.QualityEvaluator::loadCodeSmellsFile():java.io.File, SmellDetectionQualityEvaluation.QualityEvaluator::getDataForComparison():java.util.HashMap<java.lang.String,java.util.ArrayList<java.lang.String>>]
